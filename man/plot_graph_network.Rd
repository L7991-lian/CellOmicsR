% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_graph_network.R
\name{plot_graph_network}
\alias{plot_graph_network}
\title{Plot Graph Network}
\usage{
plot_graph_network(
  graph_df,
  sendercolumn,
  receivercolumn,
  widthcolumn,
  threshold = 0.01,
  colors = NULL,
  useLabels = TRUE,
  nodeSize = 5,
  vertex.label.color,
  edge.label.color,
  edge.label.cex,
  ...
)
}
\arguments{
\item{graph_df}{The dataframe containing the edge information and related attributes of the graph.}

\item{sendercolumn}{A character specifying the column name in the dataframe representing the sender.}

\item{receivercolumn}{A character specifying the column name in the dataframe representing the receiver.}

\item{widthcolumn}{A character specifying the column name in the dataframe representing the edge width.}

\item{threshold}{A numeric value specifying the threshold for filtering edge width.}

\item{colors}{A vector specifying the node colors and edge colors (optional).}

\item{useLabels}{A logical value indicating whether to display node labels (default is TRUE).}

\item{nodeSize}{A numeric value specifying the size of the nodes (default is 5).}

\item{vertex.label.color}{A character specifying the color of node labels.}

\item{edge.label.color}{A character specifying the color of edge labels.}

\item{edge.label.cex}{A numeric value specifying the font size multiplier for edge labels.}

\item{...}{Other parameters passed to the plot() function.}
}
\value{
Returns the plotted graph object.
}
\description{
Plot Graph Network
}
\examples{
dataframe <- data.frame(
source = c("A", "A", "B", "B", "C", "C", "B", "C", "D", "E", "F", "D", "D", "F"),
target = c("B", "C", "D", "C", "E", "B", "A", "F", "A", "D", "E", "F", "B", "A"),
value = c(5, 10, 0.9, 9, 7, 6, 1, 3, 8, 3, 8, 14, 2, 5)
)
colors <- c(A = "#EE4000", B = "#0000CD", C = "#66CC00", D = rgb(102/255,46/255,115/255), E = rgb(31/255,153/255,139/255), F = "#003366")
png("plot_graph_network.png", width = 7, height = 7)
plot_graph_network(dataframe, sendercolumn = "source", receivercolumn = "target", widthcolumn = "value", useLabels = T, threshold = 0.01, colors = colors, nodeSize = 10, vertex.label.color = "white", edge.label.color = "black", edge.label.cex = 1.2)
dev.off()
}
